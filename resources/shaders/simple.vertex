/* Very simple vertex shader that applies the model view
 * and projection matrix to the given vertex and overrides
 * the color with a constant for all vertices. 
 */
#version 130
 
// per vertex input
in vec3 VertexPosition;
in vec3 VertexNormal;

// input for at least primitives
uniform mat4 ProjectionMatrix;
uniform mat4 ModelViewMatrix;
uniform mat4 ModelViewProjectionMatrix;
uniform mat4 NormalMatrix;

// output to fragment shader for interpolation
out vec3 Normal;
out vec3 VertexEye;
 
void main()
{
    VertexEye = vec3(ModelViewMatrix * vec4(VertexPosition.x,VertexPosition.y,VertexPosition.z, 1.0));
    Normal = normalize(vec3(NormalMatrix * vec4(VertexNormal.x,VertexNormal.y,VertexNormal.z,1)));
    //gl_Position = ModelViewProjectionMatrix * vec4(VertexPosition.x,VertexPosition.y,VertexPosition.z, 1.0);
    gl_Position = ModelViewProjectionMatrix * vec4(VertexPosition.x,VertexPosition.y,VertexPosition.z, 1.0);
} 
